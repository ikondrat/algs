/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.5/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'

    id "com.github.spotbugs" version "1.6.2"
}

// Define the main class for the application
mainClassName = 'PercolationVisualizer'

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    compile 'edu.princeton.cs:algs4:1.0.3'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

// exclude checkstyle using -x checkstyleMain
checkstyleMain {
    configProperties = ['basedir': "$rootDir/config/checkstyle"]
    ignoreFailures = false
    configFile = new File(rootDir, 'config/checkstyle/checkstyle.xml')
}

checkstyle {
    toolVersion = "8.5"
}

spotbugs {
    toolVersion = "3.1.3"
    showProgress = true
    reportLevel = "high"
    includeFilter = file("$rootDir/config/spotbugs/spotbugs.xml")
}

run {
    args "etc/percolation/input20.txt"
}

task runPercolation(type: JavaExec, dependsOn: checkstyleMain) {
  classpath sourceSets.main.runtimeClasspath
  main = "PercolationVisualizer"
  args "etc/percolation/input20.txt"
}

task createDistCollinear(type: Zip, dependsOn: checkstyleMain){
  archiveName="collinear.zip"
  destinationDir = file('build/distributions/')
  from (file('./src/main/java/BruteCollinearPoints.java'))
  from (file('./src/main/java/Point.java'))
  from (file('./src/main/java/FastCollinearPoints.java'))
}

task createDistPuzzle(type: Zip, dependsOn: checkstyleMain){
  archiveName=" 8puzzle.zip"
  destinationDir = file('build/distributions/')
  from (file('./src/main/java/Board.java'))
  from (file('./src/main/java/Solver.java'))
}

run.dependsOn checkstyleMain